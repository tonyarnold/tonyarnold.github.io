{"version":3,"sourceRoot":"","sources":["_scss/skeleton.scss","_scss/_vars.scss","_scss/_dependencies.scss","_scss/layout.scss","_scss/base.scss","_scss/_mixins.scss","_scss/syntax.scss"],"names":[],"mappings":"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","sourcesContent":["/**\n * SASS/SCSS/Compass Transcription of Skeleton Responsive Grid\n * originally authored by Dave Gamache. This translation offers\n * mixins that support fluid and as well as fixed grids to supplement\n * the work that Dave Gamache has done.\n * @author Dennis Thompson <http://www.atomicpages.net>\n * @copyright Copyright (c) 2013 AtomicPages LLC\n * @license MIT\n * @version 1.6.1\n */\n\n// IMPORTS\n@import \"vars\"; // import _vars\n@import \"mixins\"; // import _mixins\n\n// VARIABLE OVERRIDE EXAMPLES\n// $baseWidth: 95%;\n// $tabletWidth: 95%;\n\n/* BASE GRID\n * ------------------------------------------------ */\n.container {\n\tposition: relative;\n\t// change value at the top of this file or in _vars.scss\n\twidth: $baseWidth;\n\tmargin: 0 auto;\n\tpadding: 0;\n\t.column,\n\t.columns {\n\t\tfloat: left;\n\t\tdisplay: inline;\n\t\tposition: relative;\n\t\t&.alpha { margin-left: 0; }\n\t\t&.omega { margin-right: 0; }\n\t}\n}\n.row { margin-bottom: 20px; }\n\n@include grid($baseWidth, true); // fluid\n// @include grid($baseWidth, false, 20px, 12); // 12-column fixed grid\n// @include grid($baseWidth, false, 20px, 20); // 20-column fixed grid\n// @include grid($baseWidth);\n\n/* TABLET (PORTRAIT)\n * ------------------------------------------------ */\n@media only screen and (min-width: $tabletWidth) and (max-width: $baseWidthMQ - 1) {\n\t.container {\n\t\t// change value at the top of this file or in _vars.scss\n\t\twidth: $tabletWidth;\n\t\t.column, .columns {\n\t\t\t&.alpha {\n\t\t\t\tmargin: {\n\t\t\t\t\tleft: 0;\n\t\t\t\t\tright: 10px;\n\t\t\t\t};\n\t\t\t}\n\t\t\t&.omega {\n\t\t\t\tmargin: {\n\t\t\t\t\tright: 0;\n\t\t\t\t\tleft: 10px;\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\t}\n\t.alpha.omega {\n\t\tmargin: {\n\t\t\tleft: 0;\n\t\t\tright: 0;\n\t\t};\n\t}\n\n\t// DNRY (Do Not Repeat Yourself) for fluid tablet, values are the same\n\t// @include grid($tabletWidth, false, 20px, 12); // 12-column fixed grid\n\t// @include grid($tabletWidth, false, 20px, 20); // 20-column fixed grid\n\t// @include grid($tabletWidth, false); // fixed\n}\n\n/*  MOBILE (PORTRAIT)\n * ------------------------------------------------ */\n@media only screen and (max-width: $tabletWidth - 1) {\n\t@include mobileGrid($mobilePortraitWidth);\n}\n\n/* MOBILE (LANDSCAPE)\n * ------------------------------------------------ */\n@media only screen and (min-width: 480px) and (max-width: $tabletWidth - 1) {\n\t@include mobileGrid($mobileLandscapeWidth);\n}\n\n/* CLEARING\n * ------------------------------------------------ */\n.container:after {\n\tcontent: \"\\0020\";\n\tdisplay: block;\n\theight: 0;\n\tclear: both;\n\tvisibility: hidden;\n}\n.clearfix, .row {\n\tzoom: 1;\n\t&:before, &:after {\n\t\tcontent: \"\\0020\";\n\t\tdisplay: block;\n\t\toverflow: hidden;\n\t\tvisibility: hidden;\n\t\twidth: 0;\n\t\theight: 0;\n\t}\n\t&:after { clear: both; }\n}\n.clear {\n\tclear: both;\n\tdisplay: block;\n\toverflow: hidden;\n\tvisibility: hidden;\n\twidth: 0;\n\theight: 0;\n}\n","// GLOBAL VARIABLES - include your variables here or alter the predefined vars\n// See skeleton file for copyright info\n\n// MY VARIABLES\n\n// background vars\n$backgroundColor: #fff; \t\t\t\t\t\t\t\t\t\t\t\t\t\t// default background information\n\n// font vars\n$fontSize: 14px; \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// default font size. Change here will adjust sizes across the board.\n$fontFamily: \"HelveticaNeue\", \"Helvetica Neue\", Helvetica, Arial, sans-serif;\t// default fonts\n$fontColor: #444; \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// default font color\n\n// form vars\n$formFont: $fontFamily; \t\t\t\t\t\t\t\t\t\t\t\t\t\t// default font font\n\n// link vars\n$linkColor: #333;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// default link INERT color\n$linkHoverColor: #000;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// default link HOVER color\n$linkDecoration: underline;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// default link decoration\n\n// heading vars\n$headingFamily: \"Georgia\", \"Times New Roman\", serif;\t\t\t\t\t\t\t// default heading font\n$headingColor: #181818;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// default heading color\n\n// grid variables\n$baseWidth: \t\t960px; \t\t\t\t\t\t\t\t\t\t\t\t\t\t// change this to alter the overall width of the grid\n$baseWidthMQ:\t\t960px; \t\t\t\t\t\t\t\t\t\t\t\t\t\t// base width for media query calculations in layout file\n$baseColWidth: \t\t40px;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// change this the alter the grid calculation, see _mixins file for more details\n$baseGutterWidth:\t20px;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// calculation has changed, this is mainly here for consistency with 960.gs\n$isFluid: \t\t\tfalse;\t\t\t\t\t\t\t\t\t\t\t\t\t\t// want a fluid grid by default?\n\n// ------ CHANGE MAY CAUSE UNDESIRED RESULTS\n$baseColCount: \t\t16;\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t// number of cols to generate\n\n// media query dimensions\n$tabletWidth: \t\t\t768px;\n$mobilePortraitWidth: \t300px;\n$mobileLandscapeWidth: \t420px;\n","// See skeleton file for copyright info\n\n// This file is not meant to be tampered with. This file contains the background operations\n// that are interesting but you don't really need to see. Feel free to poke around and edit\n// various functions and mixins if you wish! Note that altering this file may cause\n// undesired results!\n\n// ---------- MIXIN DEPENDENCIES\n@mixin _bd($vert, $horiz, $radius) {\n\t-webkit-border-#{$vert}-#{$horiz}-radius: $radius;\n\t-moz-border-radius-#{$vert}#{$horiz}: $radius;\n\tborder-#{$vert}-#{$horiz}-radius: $radius;\n}\n\n// _fluidGrid ( number $colCount )\n@mixin _fluidGrid($colCount) {\n\t// override only for fluid\n\t/* Overrides */\n\t.container {\n\t\t.column,\n\t\t.columns {\n\t\t\tmargin: {\n\t\t\t\tleft: 1%;\n\t\t\t\tright: 1%;\n\t\t\t}\n\t\t}\n\t}\n\t// Grid\n\t.container {\n\t\t@for $i from 1 through $colCount {\n\t\t\t@if ( $i == 1 ) {\n\t\t\t\t.#{numToString($i)}.column,\n\t\t\t\t.#{numToString($i)}.columns { width: percentage( $i / $colCount ) - 2; }\n\t\t\t} @else {\n\t\t\t\t.#{numToString($i)}.columns { width: percentage( $i / $colCount ) - 2; }\n\t\t\t}\n\t\t}\n\t\t$top: percentage( 16 / $colCount ) - 2;\n\t\t.columns.one-third { width: $top * (1 / 3) - 2; }\n\t\t.columns.two-thirds { width: $top * (2 / 3) - 2; }\n\t\t// Offsets\n\t\t@include _offset(true, $colCount, false);\n\t}\n}\n\n// _fixedGrid ( number $width, number $colWidth, number $gutterWidth, number $colCount )\n@mixin _fixedGrid($width, $colWidth, $gutterWidth, $colCount) {\n\t.container {\n\t\t.column,\n\t\t.columns {\n\t\t\tmargin: {\n\t\t\t\tleft: $gutterWidth / 2;\n\t\t\t\tright: $gutterWidth / 2;\n\t\t\t};\n\t\t}\n\t}\n\t/* The Grid */\n\t.container {\n\t\t@for $i from 1 through $colCount {\n\t\t\t @if ( $i == 1 ) {\n\t\t\t\t.#{numToString($i)}.column,\n\t\t\t\t.#{numToString($i)}.columns { width: $colWidth; }\n\t\t\t} @else {\n\t\t\t\t.#{numToString($i)}.columns { width: $colWidth + ( ( $colWidth + $gutterWidth ) * ( $i - 1 ) ); }\n\t\t\t}\n\t\t}\n\t\t.one-third.column { width: ( $width / 3 ) - 20}\n\t\t.two-thirds.column { width: ( ( $width * 2 ) / 3 ) - 20 }\n\t\t@include _offset(false, $colCount, $colWidth);\n\t}\n}\n\n// _offset ( bool $isFluid, number $colCount, number $colWidth )\n@mixin _offset($isFluid, $colCount, $colWidth) {\n\t@if ( $isFluid == true ) {\n\t\t@for $i from 1 through ( $colCount - 1 ) {\n\t\t\t.offset-by-#{numToString($i)} { padding-left: percentage( $i / $colCount ); }\n\t\t}\n\t} @else {\n\t\t@for $i from 1 through ( $colCount - 1 ) {\n\t\t\t.offset-by-#{numToString($i)} { padding-left: ( $colWidth + 20 ) * $i; }\n\t\t}\n\t}\n}\n\n// _mobileGrid ( number $width, number $colCount )\n@mixin _mobileGrid($width, $colCount) {\n\t.container {\n\t\twidth: $width;\n\t\t.column,\n\t\t.columns {\n\t\t\tmargin: {\n\t\t\t\tleft: 0;\n\t\t\t\tright: 0;\n\t\t\t};\n\t\t}\n\t\t@for $i from 1 through $colCount {\n\t\t\t@if ( $i == 1 ) {\n\t\t\t\t.#{numToString($i)}.column { width: $width; }\n\t\t\t}\n\t\t}\n\t\t@include _group($colCount, \".columns\", \"after\") { width: $width; }\n\t\t.one-third.column { width: $width; }\n\t\t.two-third.column { width: $width; }\n\t\t@include _mobileOffset($colCount);\n\t}\n}\n\n// _mobileOffset ( number $colCount )\n@mixin _mobileOffset($colCount) {\n\t@include _group($colCount - 1, \"offset-by-\") { padding-left: 0; }\n}\n\n// _group ( number $stop, string $selector, [ string $pos: \"before\" ] )\n@mixin _group($stop, $selector, $pos: \"before\") {\n\t$store: \"\";\n\t@if(type-of($stop) != \"number\") {\n\t\t@warn \"Stop must be a number! #{type-of($stop)} was provided.\";\n\t}\n\t@if($pos == \"after\") {\n\t\t@for $i from 1 through $stop {\n\t\t\t$store: $store + \".\" + numToString($i) + $selector + \",\";\n\t\t}\n\t} @else {\n\t\t@for $i from 1 through $stop {\n\t\t\t$store: $store + \".\" + $selector + numToString($i) + \",\";\n\t\t}\n\t}\n\t#{$store} {\n\t\t@content;\n\t}\n}\n\n// needs multiple stop support\n// needs center adjustment support\n// _buildRadialGradient ( string $direction, color $start, color $stop, bool $ie )\n@mixin _buildRadialGradient($direction, $start, $stop, $ie) {\n\t$direction: unquote($direction);\n\t$webkitGradientDirection: null;\n\t$linearGradientDirection: null;\n\t@if($direction == radial or $direction == ellipse or $direction == center) {\n\t\tbackground: $start;\n\t\tbackground: -moz-radial-gradient(center, ellipse cover, $start, $stop);\n\t\tbackground: -webkit-gradient(radial, center center, 0px, center center, 100%, color-stop(0% #{$start}), color-stop(100% #{$stop}));\n\t\tbackground: -webkit-radial-gradient(center, ellipse cover, $start, $stop);\n\t\tbackground: -o-radial-gradient(center, ellipse cover, $start, $stop);\n\t\tbackground: -ms-radial-gradient(center, ellipse cover, $start, $stop);\n\t\tbackground: radial-gradient(ellipse at center, $start, $stop);\n\t}\n\t@if($ie == true) {\n\t\t@include filter-gradient($start, $stop, $direction);\n\t}\n}\n\n// needs multiple stop support\n// _buildGradient ( string $direction, list $start, list $stop, bool $ie )\n@mixin _buildGradient($direction, $start, $stop, $ie) {\n\t$direction: unquote($direction);\n\t$webkitGradientDirection: null;\n\t$linearGradientDirection: null;\n\t@if($direction == left or $direction == horizontal) {\n\t\t$webkitGradientDirection: linear, left top, right top;\n\t\t$linearGradientDirection: to right;\n\t} @else if($direction == top or $direction == vertical) {\n\t\t$webkitGradientDirection: linear, left top, left bottom;\n\t\t$linearGradientDirection: to bottom;\n\t} @else if($direction == left top) {\n\t\t$direction: -45deg;\n\t\t$webkitGradientDirection: linear, left top, right bottom;\n\t\t$linearGradientDirection: 135deg;\n\t} @else if($direction == left bottom) {\n\t\t$direction: 45deg;\n\t\t$webkitGradientDirection: linear, left bottom, right top;\n\t\t$linearGradientDirection: $direction;\n\t}\n\tbackground: nth($start, 1);\n\tbackground-image: -moz-linear-gradient($direction, $start, $stop);\n\tbackground-image: -webkit-gradient($webkitGradientDirection, color-stop(nth($start, 1), nth($start, 2)), color-stop(nth($stop, 1), nth($stop, 2)));\n\tbackground-image: -webkit-linear-gradient($direction, $start, $stop);\n\tbackground-image: -o-linear-gradient($direction, $start, $stop);\n\tbackground-image: -ms-linear-gradient($direction, $start, $stop);\n\tbackground-image: linear-gradient($linearGradientDirection, $start, $stop);\n\t@if($ie == true) {\n\t\t@include filter-gradient(nth($start, 1), nth($stop, 1), vertical);\n\t}\n}\n\n// ---------- FUNCTION DEPENDENCIES\n\n// addresses https://github.com/nex3/sass/issues/533\n// number strip-units ( number $number )\n@function strip-units($number) {\n\t@return $number / ($number * 0 + 1);\n}\n\n// Converts a number from 0 to 100 to the English word\n// string numToString ( number $int )\n@function numToString($int) {\n\t// set up lists\n\t$ones: \"one\", \"two\", \"three\", \"four\", \"five\", \"six\", \"seven\", \"eight\", \"nine\";\n\t$teens: \"eleven\", \"twelve\", \"thirteen\", \"fourteen\", \"fifteen\", \"sixteen\", \"seventeen\", \"eighteen\", \"nineteen\";\n\t$tens: \"\", \"twenty\", \"thirty\", \"forty\", \"fifty\", \"sixty\", \"seventy\", \"eighty\", \"ninety\";\n\n\t$int: abs($int); // no nonnegative numbers\n\t$number: \"\";\n\t$temp: $int / 10;\n\t$temp: floor($temp);\n\t@if($int >= 1 and $int <= 100) {\n\t\t@if($temp < 1) { // it's a one!\n\t\t\t$number: nth($ones, $int % 10);\n\t\t}\n\t\t@if($temp == 1) { // in the teen range\n\t\t\t@if($int % 10 == 0) {\n\t\t\t\t$number: \"ten\";\n\t\t\t} @else {\n\t\t\t\t$number: nth($teens, $int % 10);\n\t\t\t}\n\t\t}\n\t\t@if($temp >= 2 and $temp <= 9) { // more than our teens\n\t\t\t@if($int % 10 == 0) {\n\t\t\t\t// means it's a number evenly divisible by 10\n\t\t\t\t$number: nth($tens, $int / 10);\n\t\t\t} @else {\n\t\t\t\t$number: \"#{nth($tens, floor($int / 10))}-#{nth($ones, $int % 10)}\";\n\t\t\t}\n\t\t}\n\t\t@if($temp == 10) { // this is the end...\n\t\t\t$number: \"one-hundred\";\n\t\t}\n\t} @else {\n\t\t$number: \"Invalid parameter passed. Number must be between 1 and 100.\"\n\t}\n\t@return $number;\n}\n","/**\n * SASS/SCSS/Compass Transcription of Skeleton Responsive Grid\n * originally authored by Dave Gamache. This translation offers\n * mixins that support fluid and as well as fixed grids to supplement\n * the work that Dave Gamache has done.\n * @author Dennis Thompson <http://www.atomicpages.net>\n * @copyright Copyright (c) 2013 AtomicPages LLC\n * @license MIT\n * @version 1.6.1\n */\n\n// IMPORTS\n@import \"vars\"; // import _global_variables.scss\n@import \"mixins\"; // import _mixins.scss\n\n/* SITE STYLES\n * ------------------------------------------------ */\n/* Add site styles here such as a { color: #000; } */\n\n/* PAGE STYLES\n * ------------------------------------------------ */\n/* Add page styles here such as .home { background: rgba(0, 0, 0, 0.4); } */\n\n/* MEDIA QUERIES\n * ------------------------------------------------ */\n/* Otherwise known as custom responsive code! Write it here! */\n@media only screen and (min-width: $baseWidthMQ) and (max-width: 1280px) {\n\t/* add code here */\n}\n\n/* Smaller than standard #{strip-units($baseWidthMQ)} (devices and browsers) */\n@media only screen and (max-width: $baseWidthMQ - 1) {\n\t/* add code here */\n}\n\n/* Tablet Portrait size to standard #{strip-units($baseWidthMQ)} (devices and browsers) */\n@media only screen and (min-width: $tabletWidth) and (max-width: $baseWidthMQ - 1) {\n\t/* add code here */\n}\n\n/* All Mobile Sizes (devices and browser) */\n@media only screen and (max-width: $tabletWidth - 1) {\n\t/* add code here */\n}\n\n/* Mobile Landscape Size to Tablet Portrait (devices and browsers) */\n@media only screen and (min-width: 480px) and (max-width: $tabletWidth - 1) {\n\t/* add code here */\n}\n\n/* Mobile Portrait Size to Mobile Landscape Size (devices and browsers) */\n@media only screen and (max-width: 479px) {\n\t/* add code here */\n}\n","/**\n * SASS/SCSS/Compass Transcription of Skeleton Responsive Grid\n * originally authored by Dave Gamache. This translation offers\n * mixins that support fluid and as well as fixed grids to supplement\n * the work that Dave Gamache has done.\n * @author Dennis Thompson <http://www.atomicpages.net>\n * @copyright Copyright (c) 2013 AtomicPages LLC\n * @license MIT\n * @version 1.6.1\n */\n\n// IMPORTS\n@import \"vars\"; // import _vars\n@import \"mixins\"; // import _mixins\n\n\n/* RESET & BASICS (Inspired by E. Meyers)\n * ------------------------------------------------ */\n@include global-reset;\n\n/* BASIC STYLES\n * ------------------------------------------------ */\nbody {\n\tbackground: $backgroundColor;\n\tfont: {\n\t\tsize: $fontSize;\n\t\tfamily: $fontFamily;\n\t\tweight: normal;\n\t\tstyle: normal;\n\t}\n\tline-height: $fontSize * 1.5;\n\tcolor: $fontColor;\n\t-webkit-font-smoothing: antialiased; /* Fix for webkit rendering */\n\t-webkit-text-size-adjust: 100%;\n}\n\n/* TYPOGRAPHY\n * ------------------------------------------------ */\nh1, h2, h3, h4, h5, h6 {\n\tcolor: $headingColor;\n\tfont: {\n\t\tfamily: $headingFamily;\n\t\tweight: normal;\n\t}\n}\nh1, h2, h3,\nh4, h5, h6 {\n\ta { font-weight: inherit; }\n}\nh1 {\n\tfont-size: round($fontSize * 3.8333);\n\tline-height: round($fontSize * 4.1666);\n\tmargin-bottom: round($fontSize * 1.1666);\n}\nh2 {\n\tfont-size: round($fontSize * 2.9166);\n\tline-height: round($fontSize * 3.333);\n\tmargin-bottom: round($fontSize * 0.833);\n}\nh3 {\n\tfont-size: round($fontSize * 2.333);\n\tline-height: round($fontSize * 2.833);\n\tmargin-bottom: round($fontSize * 0.666);\n}\nh4 {\n\tfont-size: round($fontSize * 1.75);\n\tline-height: round($fontSize * 2.5);\n\tmargin-bottom: round($fontSize * 0.333);\n}\nh5 {\n\tfont-size: round($fontSize * 1.4166);\n\tline-height: $fontSize * 2;\n}\nh6 {\n\tfont-size: round($fontSize * 1.1666);\n\tline-height: round($fontSize * 1.75);\n}\n.subheader { color: #777; }\np {\n  margin: 0 0 20px 0;\n  img { margin: 0; }\n  &.lead {\n\tfont-size: round($fontSize * 1.75);\n\tline-height: round($fontSize * 2.25);\n\tcolor: #777;\n  }\n}\nem, i { font-style: italic; }\nstrong, b {\n\tfont-weight: bold;\n\tcolor: #333;\n}\nu { text-decoration: underline; }\nsmall { font-size: 80%; }\n/*\tBlockquotes  */\nblockquote, blockquote p {\n\tfont-size: round($fontSize * 1.4166);\n\tline-height: $fontSize * 2;\n\tcolor: #777;\n\tfont-style: italic;\n}\nblockquote {\n\tmargin: 0 0 20px;\n\tpadding: 9px 20px 0 19px;\n\tborder-left: 1px solid #ddd;\n}\nblockquote cite {\n\tdisplay: block;\n\tfont-size: $fontSize;\n\tcolor: #555;\n\t&:before { content: \"\\2014 \\0020\"; }\n\ta, a:visited { color: #555; }\n}\nhr {\n\tborder: {\n\t\tstyle: solid;\n\t\tcolor: #ddd;\n\t\twidth: 1px 0 0;\n\t};\n\tclear: both;\n\tmargin: 10px 0 30px;\n\theight: 0;\n}\n\n/* LINKS\n * ------------------------------------------------ */\na, a:visited {\n\tcolor: $linkColor;\n\ttext-decoration: $linkDecoration;\n\toutline: 0;\n}\na:hover, a:focus, a:active { color: $linkHoverColor; }\np a, p a:visited { line-height: inherit; }\n\n/* LISTS\n * ------------------------------------------------ */\nul,\nol { margin-bottom: 20px; }\nul { list-style: none outside; }\nol { list-style: decimal; }\nol, ul.square,\nul.circle, ul.disc { margin-left: 30px; }\nul.square { list-style: square outside; }\nul.circle { list-style: circle outside; }\nul.disc { list-style: disc outside; }\nul ul, ul ol,\nol ol, ol ul {\n\tmargin: {\n\t\ttop: 4px;\n\t\tright: 0;\n\t\tbottom: 5px;\n\t\tleft: 30px;\n\t}\n\tfont-size: 90%;\n}\nul ul li,  ul ol li,\nol ol li,  ol ul li { margin-bottom: 6px; }\nli {\n\tline-height: 18px;\n\tmargin-bottom: 12px;\n}\nul.large li { line-height: 21px; }\nli p { line-height: 21px; }\n\n/* IMAGES\n * ------------------------------------------------ */\nimg.scale-with-grid {\n\tmax-width: 100%;\n\theight: auto;\n}\n\n/* BUTTONS\n * ------------------------------------------------ */\n.button,\nbutton,\ninput[type=\"submit\"],\ninput[type=\"reset\"],\ninput[type=\"button\"] {\n\tbackground: #eeeeee -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(255, 255, 255, 0.2)), color-stop(100%, rgba(0, 0, 0, 0.2)));\n\tbackground: #eeeeee -webkit-linear-gradient(top, rgba(255, 255, 255, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%);\n\tbackground: #eeeeee -moz-linear-gradient(top, rgba(255, 255, 255, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%);\n\tbackground: #eeeeee -o-linear-gradient(top, rgba(255, 255, 255, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%);\n\tbackground: #eeeeee linear-gradient(top, rgba(255, 255, 255, 0.2) 0%, rgba(0, 0, 0, 0.2) 100%);\n\tborder: 1px solid #aaa;\n\tborder: {\n\t\ttop: 1px solid #ccc;\n\t\tleft: 1px solid #ccc;\n\t};\n\t@include border-radius(3px);\n\tcolor: #444;\n\tdisplay: inline-block;\n\tfont: {\n\t\tsize: $fontSize - 1;\n\t\tweight: bold;\n\t\tfamily: $formFont;\n\t};\n\ttext-decoration: none;\n\t@include text-shadow(0 1px rgba(255, 255, 255, 0.75));\n\tcursor: pointer;\n\tline-height: normal;\n\tpadding: 8px 10px;\n\t&:hover {\n\t\tcolor: #222;\n\t\tbackground: #dddddd -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(255, 255, 255, 0.3)), color-stop(100%, rgba(0, 0, 0, 0.3)));\n\t\tbackground: #dddddd -webkit-linear-gradient(top, rgba(255, 255, 255, 0.3) 0%, rgba(0, 0, 0, 0.3) 100%);\n\t\tbackground: #dddddd -moz-linear-gradient(top, rgba(255, 255, 255, 0.3) 0%, rgba(0, 0, 0, 0.3) 100%);\n\t\tbackground: #dddddd -o-linear-gradient(top, rgba(255, 255, 255, 0.3) 0%, rgba(0, 0, 0, 0.3) 100%);\n\t\tbackground: #dddddd linear-gradient(top, rgba(255, 255, 255, 0.3) 0%, rgba(0, 0, 0, 0.3) 100%);\n\t\tborder: 1px solid #888;\n\t\tborder: {\n\t\t\ttop-color: #aaa;\n\t\t\tleft-color: #aaa;\n\t\t};\n\t}\n\t&:active {\n\t\tborder: 1px solid #666;\n\t\tbackground: #cccccc -webkit-gradient(linear, 50% 0%, 50% 100%, color-stop(0%, rgba(255, 255, 255, 0.35)), color-stop(100%, rgba(10, 10, 10, 0.4)));\n\t\tbackground: #cccccc -webkit-linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);\n\t\tbackground: #cccccc -moz-linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);\n\t\tbackground: #cccccc -o-linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);\n\t\tbackground: #cccccc linear-gradient(top, rgba(255, 255, 255, 0.35) 0%, rgba(10, 10, 10, 0.4) 100%);\n\t}\n\t&.full-width {\n\t\twidth: 100%;\n\t\tpadding-left: 0 !important;\n\t\tpadding-right: 0 !important;\n\t\ttext-align: center;\n\t}\n\t&.smaller {\n\t\tfont-size: $fontSize - 2;\n\t\tpadding: 4px 5px;\n\t}\n\t&.larger {\n\t\tfont-size: $fontSize + 2;\n\t\tpadding: 10px 18px;\n\t}\n}\n\n/* Fix for odd Mozilla border & padding issues */\nbutton,\ninput {\n\t&::-moz-focus-inner {\n\t\tborder: 0;\n\t\tpadding: 0;\n\t}\n}\n\n/* FORMS\n * ------------------------------------------------ */\nform { margin-bottom: 20px; }\nfieldset { margin-bottom: 20px; }\ninput[type=\"text\"],\ninput[type=\"password\"],\ninput[type=\"email\"],\ninput[type=\"search\"],\ninput[type=\"url\"],\ninput[type=\"tel\"],\ninput[type=\"date\"],\ninput[type=\"datetime\"],\ninput[type=\"datetime-local\"],\ninput[type=\"month\"],\ninput[type=\"week\"],\ninput[type=\"time\"],\ninput[type=\"number\"],\ntextarea,\nselect {\n\tbackground: #fff;\n\tborder: 1px solid #ccc;\n\tpadding: 6px 4px;\n\toutline: none;\n\t@include border-radius(2px);\n\tfont: {\n\t\tsize: $fontSize + 1;\n\t\tfamily: $formFont;\n\t};\n\tcolor: #777;\n\tmargin: 0 0 20px;\n\twidth: 210px;\n\tmax-width: 100%;\n\tdisplay: block;\n\t&:hover, &:focus {\n\t\tborder: 1px solid #aaa;\n\t\tcolor: #444;\n\t\t@include box-shadow(0 0 3px rgba(0,0,0,0.2));\n\t}\n\t&:active {\n\t\tborder: 1px solid darken(#aaa, 10%);\n\t\t@include box-shadow(0 0 3px rgba(0,0,0,0.3));\n\t}\n}\nselect { padding: 0; }\ntextarea { min-height: 60px; }\nlabel,\nlegend {\n\tdisplay: block;\n\tfont: {\n\t\tsize: $fontSize + 1;\n\t\tweight: bold;\n\t};\n}\nselect { width: 220px; }\ninput[type=\"checkbox\"] { display: inline; }\nlabel span,\nlegend span {\n\tfont: {\n\t\tsize: $fontSize + 1;\n\t\tweight: normal;\n\t};\n\tcolor: #444;\n}\n\ntable {\n  border-collapse: collapse;\n  table-layout: fixed;\n  width: 100%;\n  margin: 0 0 20px 0;\n}\n\nth {\n  font-weight: bold;\n  padding: ($fontSize * 1.5 / 2);\n  text-align: left;\n}\n\ntd {\n  padding: ($fontSize * 1.5 / 2);\n}\n\ntr, td, th {\n  vertical-align: middle;\n}\n\n\n/* MISC\n * ------------------------------------------------ */\n.subtract-bottom { margin-bottom: -20px !important; }\n.remove-bottom { margin-bottom: 0 !important; }\n.half-bottom { margin-bottom: 10px !important; }\n.add-bottom { margin-bottom: 20px !important; }\n","// See skeleton file for copyright info\n\n@import \"dependencies\"; // don't remove me\n\n// ---------- ADD CUSTOM MIXINS BELOW HERE\n// @mixin myMixin() { }\n\n// ---- MIXINS ----\n\n// border-radius ( list $radius )\n@mixin border-radius($radius) {\n\t@if(length($radius) > 4) {\n\t\t@warn \"Border-radius propery supports a maximum of 4 parameters. #{length($radius)} parameters were supplied.\";\n\t}\n\t-webkit-border-radius: $radius;\n\t-moz-border-radius: $radius;\n\t-ms-border-radius: $radius;\n\t-o-border-radius: $radius;\n\tborder-radius: $radius;\n}\n\n@mixin border-top-left-radius($radius: $default-border-radius) { @include _bd(\"top\", \"left\", $radius); }\n\n@mixin border-top-right-radius($radius: $default-border-radius) { @include _bd(\"top\", \"right\", $radius); }\n\n@mixin border-bototm-left-radius($radius: $default-border-radius) { @include _bd(\"bottom\", \"left\", $radius); }\n\n@mixin border-bottom-right-radius($radius: $default-border-radius) { @include _bd(\"bottom\", \"right\", $radius); }\n\n@mixin border-top-radius($radius: $default-border-radius) {\n\t@include border-top-left-radius($radius);\n\t@include border-top-right-radius($radius);\n}\n\n@mixin border-right-radius($radius: $default-border-radius) {\n\t@include border-top-right-radius($radius);\n\t@include border-bottom-right-radius($radius);\n}\n\n@mixin border-bottom-radius($radius: $default-border-radius) {\n\t@include border-bottom-left-radius($radius);\n\t@include border-bottom-right-radius($radius);\n}\n\n@mixin border-left-radius($radius: $default-border-radius) {\n\t@include border-top-left-radius($radius);\n\t@include border-bottom-left-radius($radius);\n}\n\n// opacity\n// opacity ( number $alpha [ bool $ie: true ] )\n@mixin opacity($alhpa, $ie: true) {\n\t@if(type-of($alpha) != number) {\n\t\t@warn \"$alpha must be a number. Setting to 0.5.\";\n\t\t$alpha: 0.5;\n\t} @else {\n\t\t@if($alpha < 0 or $alpha > 1) {\n\t\t\t@warn \"$alpha must be within 0 and 1. Setting to 0.5.\";\n\t\t\t$alpha: 0.5;\n\t\t}\n\t}\n\t@if($ie == true) {\n\t\tfilter: progid:DXImageTransform.Microsoft.Alpha(Opacity=$alpha * 100);\n\t}\n\topacity: $alpha;\n}\n\n// text shadow\n// text-shadow ( list $shadow )\n@mixin text-shadow($shadow) {\n\t$shadow: $shadow;\n\t@if(type-of($shadow) != \"list\" and type-of($shadow) != \"string\") {\n\t\t@warn \"Invalid parameters passed. Expected a list or a string got #{type-of($shadow)}. Defaulting to none.\";\n\t\t$shadow: none;\n\t}\n\t@if($shadow == none) {\n\t\ttext-shadow: none;\n\t} @else {\n\t\ttext-shadow: $shadow;\n\t}\n}\n\n// box shadow\n// box-shadow ( list $shadow )\n@mixin box-shadow($shadow) {\n\t$shadow: $shadow;\n\t@if(type-of($shadow) != \"list\" and type-of($shadow) != \"string\") {\n\t\t@warn \"Invalid parameters passed. Expected a list or a string got #{type-of($shadow)}. Defaulting to none.\";\n\t\t$shadow: none;\n\t}\n\n\t@if($shadow == none) {\n\t\t-webkit-box-shadow: none;\n\t\t-moz-box-shadow: none;\n\t\tbox-shadow: none;\n\t} @else {\n\t\t-webkit-box-shadow: $shadow;\n\t\t-moz-box-shadow: $shadow;\n\t\tbox-shadow: $shadow;\n\t}\n}\n\n// box sizing\n// box-sixing ( string $type )\n@mixin box-sizing($type) {\n\t$type: unquote($type);\n\t@if($type != content-box and $type != padding-box and $type != border-box) {\n\t\t@warn \"Allowed values are content-box, padding-box, or border-box. Got #{$type} but defaulting to content-box.\";\n\t\t$type: content-box;\n\t}\n\t-webkit-box-sizing: $type;\n\t-moz-box-sizing: $type;\n\tbox-sizing: $type;\n}\n\n// single-transition ( string $property, number $duration, string $function, [ number $delay: false ] )\n@mixin single-transition($property, $duration, $function, $delay: false) {\n\t@if($delay == false) {\n\t\t$delay: \"\";\n\t}\n\t-webkit-transition: $property $duration $function $delay;\n\t-moz-transition: $property $duration $function $delay;\n\t-ms-transition: $property $duration $function $delay;\n\t-o-transition: $property $duration $function $delay;\n\ttransition: $property $duration $function $delay;\n}\n\n// transition ( list $transition )\n@mixin transition($transition) {\n\t$transition: unquote($transition); //this helps with multiple tansitions\n\t-webkit-transition: $transition;\n\t-moz-transition: $transition;\n\t-ms-transition: $transition;\n\t-o-transition: $transition;\n\ttransition: $transition;\n}\n\n// filter-gradient ( color $start, [ color $stop: false, [ string $direction: false ] ] )\n@mixin filter-gradient($start, $stop: false, $direction: false) {\n\t$direction: unquote($direction);\n\t$type: false;\n\t@if(unquote($start) != none) {\n\t\t*zoom: 1;\n\t\tfilter: progid:DXImageTransform.Microsoft.gradient(gradientType=0, startColorstr='#{ie-hex-str($start)}', endColorstr='#{ie-hex-str($stop)}');\n\t} @else {\n\t\t$stop: null;\n\t\t$direction: null;\n\t\t// see http://stackoverflow.com/questions/1768161/how-do-i-reset-or-override-ie-css-filters\n\t\tfilter: \"progid:DXImageTransform.Microsoft.gradient(enabled=false)\";\n\t}\n}\n\n// needs multiple stop support\n// linear-gradient ( string $direction, list $start, list $stop, [ bool $ie: true ] )\n@mixin linear-gradient($direction, $start, $stop, $ie: true) {\n\t@if(type-of($start) != \"list\") {\n\t\t@warn \"Bad parameter for $start. Expected list got #{type-of($start)}, defaulting to false.\";\n\t\t$start: false;\n\t} @else if(type-of($stop) != \"list\") {\n\t\t@warn \"Bad parameter for $stop. Expected list got #{type-of($stop)}, defaulting to false.\";\n\t\t$stop: false;\n\t}\n\t@include _buildGradient($direction, $start, $stop, $ie);\n}\n\n// radial-gradient ( string $direction, list $start, list $stop, [ bool $ie: true ] )\n@mixin radial-gradient($direction, $start, $stop, $ie: true) {\n\t@include _buildRadialGradient($direction, $start, $stop, $ie);\n}\n\n// begin reset mixins\n@mixin reset-box-model {\n\tmargin: 0;\n\tpadding: 0;\n\tborder: 0;\n}\n\n@mixin reset-font {\n\tfont-size: 100%;\n\tfont: inherit;\n\tvertical-align: baseline;\n}\n\n@mixin reset-focus {\n\toutline: 0;\n}\n\n@mixin reset-body {\n\tline-height: 1;\n}\n\n@mixin reset-list-style {\n\tlist-style: none;\n}\n\n@mixin reset-table {\n\tborder: {\n\t\tcollapse: collapse;\n\t\tspacing: 0;\n\t}\n}\n\n@mixin reset-table-cell {\n\ttext-align: left;\n\tfont-weight: normal;\n\tvertical-align: middle;\n}\n\n@mixin reset-quotation {\n\tquotes: none;\n\t&:before, &:after {\n\t\tcontent: \"\";\n\t\tcontent: none;\n\t}\n}\n\n@mixin reset-image-anchor-border {\n\tborder: none;\n}\n\n@mixin reset-html5 {\n\t/* HTML5 display-role reset for older browsers */\n\tarticle, aside, details, figcaption, figure,\n\tfooter, header, hgroup, menu, nav, section { display: block; }\n}\n\n@mixin global-reset {\n\thtml, body, div, span, applet, object, iframe,\n\th1, h2, h3, h4, h5, h6, p, blockquote, pre,\n\ta, abbr, acronym, address, big, cite, code,\n\tdel, dfn, em, img, ins, kbd, q, s, samp,\n\tsmall, strike, strong, sub, sup, tt, var,\n\tb, u, i, center,\n\tdl, dt, dd, ol, ul, li,\n\tfieldset, form, label, legend,\n\ttable, caption, tbody, tfoot, thead, tr, th, td,\n\tarticle, aside, canvas, details, embed,\n\tfigure, figcaption, footer, header, hgroup,\n\tmenu, nav, output, ruby, section, summary,\n\ttime, mark, audio, video {\n\t\t@include reset-box-model;\n\t\t@include reset-font;\n\t}\n\t@include reset-html5;\n\tbody { @include reset-body; }\n\tol, ul { @include reset-list-style; }\n\tblockquote, q { @include reset-quotation; }\n\ttable {\n\t\t@include reset-table;\n\t}\n}\n\n@mixin nested-reset {\n\tdiv, span, applet, object, iframe,\n\th1, h2, h3, h4, h5, h6, p, blockquote, pre,\n\ta, abbr, acronym, address, big, cite, code,\n\tdel, dfn, em, img, ins, kbd, q, s, samp,\n\tsmall, strike, strong, sub, sup, tt, var,\n\tb, u, i, center,\n\tdl, dt, dd, ol, ul, li,\n\tfieldset, form, label, legend,\n\ttable, caption, tbody, tfoot, thead, tr, th, td,\n\tarticle, aside, canvas, details, embed,\n\tfigure, figcaption, footer, header, hgroup,\n\tmenu, nav, output, ruby, section, summary,\n\ttime, mark, audio, video {\n\t\t@include reset-box-model;\n\t\t@include reset-font;\n\t}\n\tol, ul { @include reset-list-style; }\n\tblockquote, q { @include reset-quotation; }\n\tcaption, th, td { @include reset-table-cell; }\n\ttable { @include reset-table; }\n\ta img { @include reset-image-anchor-border; }\n}\n// end reset mixins\n\n// grid ( [ number $width: 960px, [ bool $fluid: false, [  number $gutterWidth: 20px, [ number $colCount: 16 ] ] ] ] )\n@mixin grid($width: $baseWidth, $fluid: $isFluid, $colWidth: $baseColWidth, $gutterWidth: $baseGutterWidth, $colCount: $baseColCount) {\n\t@if ( $fluid == true ) {\n\t\t@include _fluidGrid($colCount);\n\t} @else {\n\t\t// we no longer need to set a value for $colWdith because it is generated dynamically right here!\n\t\t// @see https://github.com/atomicpages/skeleton-sass/issues/7\n\t\t$colWidth: ($width / $colCount) - $gutterWidth;\n\t\t@include _fixedGrid($width, $colWidth, $gutterWidth, $colCount);\n\t}\n}\n\n// mobileGrid ( [ number $width: 960px, [ number $colCount: 16 ]  ] )\n@mixin mobileGrid($width: $baseWidth, $colCount: $baseColCount) {\n\t@include _mobileGrid($width, $colCount);\n}\n","/*\n * GitHub style for Pygments syntax highlighter, for use with Jekyll\n * Courtesy of GitHub.com\n */\n\n.highlight pre, pre, .highlight .hll { background-color: #f8f8f8; border: 1px solid #ccc; padding: 6px 10px; border-radius: 3px; }\n.highlight .c { color: #999988; }\n.highlight .err { color: #a61717; background-color: #e3d2d2; }\n.highlight .k { }\n.highlight .o { }\n.highlight .cm { color: #999988; }\n.highlight .cp { color: #999999; }\n.highlight .c1 { color: #999988; }\n.highlight .cs { color: #999999; }\n.highlight .gd { color: #000000; background-color: #ffdddd; }\n.highlight .gd .x { color: #000000; background-color: #ffaaaa; }\n.highlight .ge { }\n.highlight .gr { color: #aa0000; }\n.highlight .gh { color: #999999; }\n.highlight .gi { color: #000000; background-color: #ddffdd; }\n.highlight .gi .x { color: #000000; background-color: #aaffaa; }\n.highlight .go { color: #888888; }\n.highlight .gp { color: #555555; }\n.highlight .gs { }\n.highlight .gu { color: #800080; }\n.highlight .gt { color: #aa0000; }\n.highlight .kc { }\n.highlight .kd { }\n.highlight .kn { }\n.highlight .kp { }\n.highlight .kr { }\n.highlight .kt { color: #445588; }\n.highlight .m { color: #009999; }\n.highlight .s { color: #dd1144; }\n.highlight .n { color: #333333; }\n.highlight .na { color: teal; }\n.highlight .nb { color: #0086b3; }\n.highlight .nc { color: #445588; }\n.highlight .no { color: teal; }\n.highlight .ni { color: purple; }\n.highlight .ne { color: #990000; }\n.highlight .nf { color: #990000; }\n.highlight .nn { color: #555555; }\n.highlight .nt { color: navy; }\n.highlight .nv { color: teal; }\n.highlight .ow { }\n.highlight .w { color: #bbbbbb; }\n.highlight .mf { color: #009999; }\n.highlight .mh { color: #009999; }\n.highlight .mi { color: #009999; }\n.highlight .mo { color: #009999; }\n.highlight .sb { color: #dd1144; }\n.highlight .sc { color: #dd1144; }\n.highlight .sd { color: #dd1144; }\n.highlight .s2 { color: #dd1144; }\n.highlight .se { color: #dd1144; }\n.highlight .sh { color: #dd1144; }\n.highlight .si { color: #dd1144; }\n.highlight .sx { color: #dd1144; }\n.highlight .sr { color: #009926; }\n.highlight .s1 { color: #dd1144; }\n.highlight .ss { color: #990073; }\n.highlight .bp { color: #999999; }\n.highlight .vc { color: teal; }\n.highlight .vg { color: teal; }\n.highlight .vi { color: teal; }\n.highlight .il { color: #009999; }\n.highlight .gc { color: #999; background-color: #EAF2F5; }\n"],"file":"all.css"}